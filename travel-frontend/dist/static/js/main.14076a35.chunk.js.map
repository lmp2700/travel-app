{"version":3,"sources":["Containers/DashboardContainer/Notifications.jsx","Containers/TripsContainer/TripMainContainer.jsx","Containers/TripsContainer/TripListContainer.jsx","Containers/DashboardContainer/Dashboard.jsx","Containers/DashboardContainer/SignedInContainer.jsx","store/actions/authActions.js","Containers/DashboardContainer/SignedOutContainer.jsx","Containers/DashboardContainer/NavContainer.jsx","Containers/TripsContainer/TripDetailContainer.jsx","Containers/AuthContainer/LoginContainer.jsx","Containers/AuthContainer/RegisterContainer.jsx","Containers/TripsContainer/TripCreateContainer.jsx","store/actions/tripActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/tripReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["Notifications","props","notifications","react_default","a","createElement","className","map","item","key","id","user","content","moment","time","toDate","fromNow","TripMain","_ref","trip","title","authorFirstName","authorLastName","createdAt","format","TripsList","trips","Link","to","TripMainContainer","Dashboard","_this$props","this","auth","uid","TripListContainer","DashboardContainer_Notifications","Redirect","Component","compose","connect","state","console","log","firestore","ordered","firebase","firestoreConnect","collection","orderBy","limit","dispatch","logOut","getState","_ref2","getFirebase","signOut","then","type","NavLink","href","onClick","profile","initials","SignedOut","links","SignedInContainer","SignedOutContainer","ownProps","match","params","data","LoginContainer","email","password","handleChange","e","_this","setState","Object","defineProperty","currentTarget","value","handleSubmit","preventDefault","logIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","RegisterContainer","firstName","lastName","register","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateTrip","createTrip","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","NavContainer","Switch","Route","exact","path","component","TripDetails","TripCreate","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","tripReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14076a35.chunk.js","sourcesContent":["import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\n\nconst TripMain = ({ trip }) => {\n    return (\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{trip.title}</span>\n                <p>Posted by {trip.authorFirstName} {trip.authorLastName}</p>\n                <p className=\"grey-text\">{moment(trip.createdAt.toDate()).format(\"dddd, MMMM Do YYYY\")}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default TripMain;","import React from 'react';\nimport TripMain from './TripMainContainer';\nimport { Link } from 'react-router-dom';\n\n\nconst TripsList = ({ trips }) => {\n    return (\n        <div className=\"trips-list section\">\n            {trips && trips.map(trip => {\n                return (\n                    <Link to={'/trip/' + trip.id} key={trip.id}>\n                        <TripMain trip={trip} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default TripsList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport TripsList from '../TripsContainer/TripListContainer';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render() {\n        // console.log(this.props)\n        const { trips, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/login' />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col sm12 m6\">\n                        <TripsList trips={trips} />\n                    </div>\n                    <div className=\"col sm12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        trips: state.firestore.ordered.trips,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'trips', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\n    ]),\n)(Dashboard);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logOut } from '../../store/actions/authActions';\n\nconst SignedIn = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Trip</NavLink></li>\n            <li><NavLink to='/'>Account</NavLink></li>\n            <li><NavLink to='/'>Edit Trip</NavLink></li>\n            <li><a href=\"true\" onClick={props.logOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating green lighten-1'>\n                {props.profile.initials}\n            </NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logOut: () => dispatch(logOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedIn);","export const logIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        });\n    }\n}\n\nexport const logOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'LOGOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const register = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((response) => {\n            return firestore.collection('users').doc(response.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'REGISTRATION_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'REGISTRATION_ERROR', err })\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOut = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/login'>Log In</NavLink></li>\n            <li><NavLink to='/register'>Sign Up</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOut;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedIn from './SignedInContainer';\nimport SignedOut from './SignedOutContainer';\nimport { connect } from 'react-redux';\n\nconst NavBar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedIn profile={profile} /> : <SignedOut />;\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"band-logo\">Home</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\nconst mapStatetoProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStatetoProps)(NavBar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\n\n// The behavior for Date objects stored in Firestore is going to change\n// AND YOUR APP MAY BREAK.\n// To hide this warning and ensure your app does not break, you need to add the\n// following code to your app before calling any other Cloud Firestore methods:\n\n//   const firestore = new Firestore();\n//   const settings = {/* your settings... */ timestampsInSnapshots: true};\n//   firestore.settings(settings);\n\n// With this change, timestamps stored in Cloud Firestore will be read back as\n// Firebase Timestamp objects instead of as system Date objects. So you will also\n// need to update code expecting a Date to instead expect a Timestamp. For example:\n\n//   // Old:\n//   const date = snapshot.get('created_at');\n//   // New:\n//   const timestamp = snapshot.get('created_at');\n//   const date = timestamp.toDate();\n\n// Please audit all existing usages of Date when you enable the new behavior. In a\n// future release, the behavior will change to the new behavior, so if you do not\n// follow these steps, YOUR APP MAY BREAK.\n\nconst TripDetails = (props) => {\n    const { trip, auth } = props;\n    if (!auth.uid) return <Redirect to='/login' />\n    // console.log(props)\n    if (trip) {\n        return (\n            <div className=\"container section trip-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">{trip.title}</span>\n                        <p>{trip.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted by {trip.authorFirstName} {trip.authorLastName}</div>\n                        <div>{moment(trip.createdAt.toDate()).format(\"dddd, MMMM Do YYYY\")}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    // console.log(state)\n    const id = ownProps.match.params.id;\n    const trips = state.firestore.data.trips;\n    const trip = trips ? trips[id] : null\n    return {\n        trip: trip,\n        auth: state.firebase.auth\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'trips' }\n    ])\n)(TripDetails);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\n\nclass LoginContainer extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.currentTarget.id]: e.currentTarget.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.logIn(this.state)\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"gray-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0>\">Login</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        logIn: (creds) => (dispatch(logIn(creds)))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { register } from '../../store/actions/authActions';\n\nclass RegisterContainer extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.currentTarget.id]: e.currentTarget.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.register(this.state)\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"gray-text text-darken-3\">Register</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0>\">Register</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        register: (newUser) => dispatch(register(newUser))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createTrip } from '../../store/actions/tripActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateTrip extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.currentTarget.id]: e.currentTarget.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state)\n        this.props.createTrip(this.state)\n        this.props.history.push('/');\n    }\n    render() {\n        const { auth } = this.props\n        if (!auth.uid) return <Redirect to='/login' />\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"gray-text text-darken-3\">Create a Trip</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Trip Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Trip Details</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0>\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createTrip: (trip) => dispatch(createTrip(trip))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTrip);\n","export const createTrip = (trip) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('trips').add({\n            ...trip,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_TRIP', trip });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_TRIP_ERROR', err });\n        })\n    }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Dashboard from './Containers/DashboardContainer/Dashboard'\nimport NavBar from './Containers/DashboardContainer/NavContainer'\nimport TripDetails from './Containers/TripsContainer/TripDetailContainer'\nimport LoginContainer from './Containers/AuthContainer/LoginContainer'\nimport RegisterContainer from './Containers/AuthContainer/RegisterContainer'\nimport TripCreate from './Containers/TripsContainer/TripCreateContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/trip/:id\" component={TripDetails} />\n            <Route path=\"/login\" component={LoginContainer} />\n            <Route path=\"/register\" component={RegisterContainer} />\n            <Route path=\"/create\" component={TripCreate} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'LOGOUT_SUCCESS':\n            console.log('Logout success');\n            return state;\n        case 'REGISTRATION_SUCCESS':\n            console.log('registration success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'REGISTRATION_ERROR':\n            console.log('registration error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    trips: []\n}\n\nconst tripReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_TRIP':\n            console.log('created trip', action.trip);\n            return state;\n        case 'CREATE_TRIP_ERROR':\n            console.log('create trip error', action.err)\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default tripReducer;","import authReducer from './authReducer';\nimport tripReducer from './tripReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    trip: tripReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n})\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nconst config = {\n    apiKey: \"AIzaSyB2c2cl1hBQVEY1Qmoj_zkq4yLHiuFcGpo\",\n    authDomain: \"travel-app-77bb5.firebaseapp.com\",\n    databaseURL: \"https://travel-app-77bb5.firebaseio.com\",\n    projectId: \"travel-app-77bb5\",\n    storageBucket: \"travel-app-77bb5.appspot.com\",\n    messagingSenderId: \"490345068681\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}